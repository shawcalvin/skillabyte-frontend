import { LoadingIcon } from "@/components/ui/loading-icon";
import { Text } from "@/components/ui/text";
import { SQLFlags } from "@/lib/types/sql";

type QueryFeedbackProps = {
    loading: boolean;
    flags: SQLFlags | null;
    feedback: string | null;
};

export function QueryFeedback({ loading, flags, feedback }: QueryFeedbackProps) {

    if (loading) {
        return <div className="w-full flex justify-center">
            <LoadingIcon />
        </div>
    } else if (!flags || !feedback) {
        return <div className="text-gray-600 py-2">No feedback. Click the ‘Check’ button to receive feedback for your query.</div>;
    }

    const rows = flags.correctRowCount ? 1 : 0;
    const cols = flags.correctColCount ? 1 : 0;
    const headers = flags.correctColValues ? 1 : 0;
    const body = flags.correctRowValues ? 1 : 0;
    const passed = rows + cols + headers + body;
    const bonus = passed === 4 ? 1 : 0;
    const score = passed + bonus;
    const pct = (score / 5) * 100;

    return (
        <div className="query-feedback p-4 bg-white rounded-lg shadow">
            {/* Score header */}
            <div className="flex items-center justify-between">
                <h3 className="text-lg font-semibold">Score: {score} / 5</h3>
                <span className="text-sm text-gray-600">{Math.round(pct)}%</span>
            </div>

            {/* Progress bar */}
            <div className="w-full bg-gray-200 rounded-full h-2 mt-2 mb-4 overflow-hidden">
                <div
                    className="h-full bg-blue-500 rounded-full"
                    style={{ width: `${pct}%` }}
                />
            </div>

            {/* Metrics grid */}
            <div className="grid grid-cols-2 gap-2">
                {[
                    ["Correct Row Count", rows],
                    ["Correct Column Count", cols],
                    ["Correct Column Names", headers],
                    ["Correct Row Values", body],
                ].map(([label, value]) => (
                    <div
                        key={label}
                        className="flex items-center justify-between bg-gray-50 p-2 rounded"
                    >
                        <span className="text-sm">{label}</span>
                        <span className={`font-mono ${value ? "text-green-600" : "text-red-600"}`}>
                            +{value}
                        </span>
                    </div>
                ))}

                {/* Bonus */}
                <div className="flex items-center justify-between bg-gray-50 p-2 rounded col-span-2">
                    <span className="text-sm">Bonus</span>
                    <span className={`font-mono ${bonus ? "text-green-600" : "text-gray-400"}`}>
                        +{bonus}
                    </span>
                </div>
            </div>
            <p className="mt-8 mb-2 italic text-xs text-gray-500">Disclaimer: Some feedback is generated by AI.</p>
            <Text>{feedback}</Text>
        </div>
    );
}